//==========================================================================
// Usage:
// .Komponente {
//   @include themify() {
//     color: $theme-color;
//     background-color: $theme-background-color;
//   }
// }
// Output:
// .theme-1 .Komponente { ... }
//==========================================================================

$themes: (
      "theme-1": (
            "color": red,
            "background-color": green
      ),
      "theme-2": (
            "color": orange,
            "background-color": purple
      ),
);

@function map-fetch($map, $keys) {
  $key: nth($keys, 1);
  $length: length($keys);
  $value: map-get($map, $key);

  @if $value != null {
    @if $length > 1 {
      $rest: ();

      @for $i from 2 through $length {
        $rest: append($rest, nth($keys, $i))
      }

      @return map-fetch($value, $rest);

    } @else {
      @return $value;
    }
  } @else {
    @return inherit;
  }
}

@mixin themify($themes: $themes) {
  @each $theme, $map in $themes {
    .#{$theme} & {
      // Properties festlegen
      $theme-color: map-fetch($themes, $theme "color") !global;
      $theme-background-color: map-fetch($themes, $theme "background-color") !global;
      // ... hier noch weitere

      @content;

      // Reset theme color to null
      $theme-color: null !global;
    }
  }
}

